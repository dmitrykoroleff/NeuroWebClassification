import React, { useRef, useState, useCallback, useEffect, useMemo } from 'react';
import { Camera } from "react-camera-pro";
import useWebSocket, { ReadyState } from 'react-use-websocket';
import axios from 'axios';

function getBase64StrFromUrl(dataUrl) {
  const prefix = "base64,";
  const sliceIndex = dataUrl.indexOf(prefix);
  if (sliceIndex === -1) throw new Error("Expected base64 data URL");
  return dataUrl.slice(sliceIndex + prefix.length);
}

// https://deno.land/std@0.182.0/encoding/base64.ts?source#L137
function decode(base64Str) {
  const binString = window.atob(base64Str);
  const size = binString.length;
  const bytes = new Uint8Array(size);
  for (let i = 0; i < size; i++) {
    bytes[i] = binString.charCodeAt(i);
  }
  return bytes;
}



function Component() {
  const camera = useRef(null);
  const [image, setImage] = useState("");

  const [socketUrl, setSocketUrl] = useState('wss://echo.websocket.org');
  const [messageHistory, setMessageHistory] = useState([]);

  const { sendMessage, lastMessage, readyState } = useWebSocket(socketUrl);

  useEffect(() => {
    if (lastMessage !== null) {
      setMessageHistory((prev) => prev.concat(lastMessage));
    }
  }, [lastMessage, setMessageHistory]);

  const handleClickChangeSocketUrl = useCallback(
    () => setSocketUrl('wss://demos.kaazing.com/echo'),
    []
  );

  const handleClickSendMessage = useCallback(() => sendMessage(), []);

  const connectionStatus = {
    [ReadyState.CONNECTING]: 'Connecting',
    [ReadyState.OPEN]: 'Open',
    [ReadyState.CLOSING]: 'Closing',
    [ReadyState.CLOSED]: 'Closed',
    [ReadyState.UNINSTANTIATED]: 'Uninstantiated',
  }[readyState];

  // The converted byte array:
  const byteArray = useMemo(
    () => image ? decode(getBase64StrFromUrl(image)) : new Uint8Array(),
    [image],
  );

  const capturePhoto = () => camera.current && setImage(camera.current.takePhoto());

  return (
    <div>
      <Camera
        ref={camera}
        aspectRatio={1}
        errorMessages={{}}
        facingMode="environment"
      />
      <img src={image} alt="Taken photo" />
      <button onClick={capturePhoto}>Capture photo</button>


      <button onClick={handleClickChangeSocketUrl}>
        Click Me to change Socket Url
      </button>
      <button
        onClick={handleClickSendMessage}
        disabled={readyState !== ReadyState.OPEN}
      >
        Click Me to send 'Hello'
      </button>
      <span>The WebSocket is currently {connectionStatus}</span>
      {lastMessage ? <span>Last message: {lastMessage.data}</span> : null}
      <ul>
        {messageHistory.map((message, idx) => (
          <span key={idx}>{message ? message.data : null}</span>
        ))}
      </ul>


    </div>





  );
}

export default Component;